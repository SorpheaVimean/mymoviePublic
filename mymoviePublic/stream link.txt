
key search on google "movie embed api"
Movie APIs:
https://vidsrc.me/embed/imdbId/ --ads
https://fsapi.xyz/movie/imdbId
https://curtstream.com/movies/imdb/imdbId
https://moviewp.com/se.php?video_id=imdbId
https://v2.apimdb.net/e/movie/imdbId
https://gomo.to/movie/imdbId
https://vidcloud.stream/imdbId.html
https://getsuperembed.link/?video_id=imdbId (!!! returns url, parse body and embed that)

TV APIs
https://fsapi.xyz/tv-imdb/imdbId-season-episode
https://moviewp.com/se.php?video_id=tmdbId&tmdb=1&s=season&e=episode
https://v2.apimdb.net/e/tmdb/tv/tmdbId/season/episode/
https://databasegdriveplayer.co/player.php?type=series&tmdb=tmdbId&season=season&episode=episode
https://curtstream.com/series/tmdb/tmdbId/season/episode/
https://getsuperembed.link/?video_id=imdbId&season=season&episode=episode (!!! returns url, parse body and embed that)




  // const getTrailer = async () => {
  //   var param = id;
  //   setLoading(true);
  //   const res = await request("movie/" + param + "/videos", "GET");
  //   if (res) {
  //     setLoading(false);

  //     setMovieDetail(res);
  //   }
  //   // Uncaught TypeError: Cannot read properties of undefined (reading 'map')
  // };
  // const getTrailer = async () => {
  //   var param = id;
  //   setLoading(true);
  //   const res = await request("movie/" + param + "/videos", "GET");
  //   if (res && res.results.length > 0) {
  //     setLoading(false);
  //     // Find the trailer with the desired type, for example, "Teaser"
  //     const teaserTrailer = res.results.find(trailer => trailer.type === "Teaser");
  //     if (teaserTrailer) {
  //       // If a trailer with the desired type is found, set its key as the videoId
  //       setTrailer(teaserTrailer.key);
  //     } else {
  //       // If no trailer with the desired type is found, set the key of the first trailer as the videoId
  //       setTrailer(res.results[0].key);
  //     }
  //   }
  // };
  const getTrailer = async () => {
    var param = id;
    setLoading(true);
    const res = await request("movie/" + param + "/videos", "GET");
    if (res && res.results.length > 0) {
      setLoading(false);
      // Find the trailer video
      const trailerVideo = res.results.find(video => video.type === "Trailer");
      if (trailerVideo) {
        // Set the trailer key as the videoId
        setTrailer(trailerVideo.key);
      } else {
        setTrailer(res.results[0].key);
      }
    }
  };